#pragma once

#define MODBUS_ADDRESS 1

#define MODBUS_RECEIVE_BUFFER_SIZE 8
#define MODBUS_TRANSMIT_BUFFER_SIZE HOLDING_REGS_COUNT * 2 + 5

#define INPUT_REGS_COUNT 10
#define HOLDING_REGS_COUNT 50
#define COILS_COUNT 0

typedef enum {
	READ_COILS = 1,
	READ_DISCRETE_INPUTS = 2,
	READ_HOLDING_REGISTERS = 3,
	READ_INPUT_REGISTERS = 4,
	WRITE_SINGLE_COIL = 5,
	WRITE_SINGLE_REGISTER = 6,
	READ_EXCEPTION_STATUS = 7,
	DIAGNOSTICS = 8,
} modbus_command_e;

typedef enum  {
	NOERROR = 0,
	ILLEGAL_FUNCTION = 1,
	ILLEGAL_DATA_ADDRESS = 2,
	ILLEGAL_DATA_VALUE = 3,
	SLAVE_DEVICE_FAILURE = 4,
	ACKNOWLEDGE = 5,
	SLAVE_DEVICE_BUSY = 6,
	NEGATIVE_ACKNOWLEDGE = 7,
	MEMORY_PARITY_ERROR = 8,
} modbus_errors_e;

void modbusIdleHandler();
void modbusTcHandler();
void modbusRxHandler();
