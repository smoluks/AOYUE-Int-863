#pragma once

#include "stm32f1xx.h"

#define GPIOA_FANOFF   		1 << 15

#define GPIOB_1WIRE  		1 << 0
#define GPIOB_BTRESET 		1 << 1
#define GPIOB_OLED_RESET    1 << 6
#define GPIOB_OLED_DC       1 << 8
#define GPIOB_LED_RED       1 << 7
#define GPIOB_LED_GREEN     1 << 9
#define GPIOB_BTLED2 		1 << 11
#define GPIOB_BTMODE  		1 << 12
#define GPIOB_OUT1		  	1 << 13
#define GPIOB_OUT2  		1 << 14
#define GPIOB_USB_EN 		1 << 15

#define GPIOC_BUTTON_UP		1 << 15
#define GPIOC_BUTTON_MENU	1 << 14
#define GPIOC_BUTTON_DOWN	1 << 13

#define BSRR_SET(i) i
#define BSRR_RESET(i) i << 16

//
#define LED_SETRED() GPIOB->BSRR = BSRR_RESET(GPIOB_LED_GREEN) | BSRR_SET(GPIOB_LED_RED)
#define LED_SETGREEN() GPIOB->BSRR = BSRR_SET(GPIOB_LED_GREEN) | BSRR_RESET(GPIOB_LED_RED)

#define ONEWIRE_PULLDOWN()  {	\
							GPIOB->CRL = (GPIOB->CRL & 0xFFFFFFF0) | 0x00000007; \
							GPIOB->BSRR = BSRR_RESET(GPIOB_1WIRE);	\
							}

#define ONEWIRE_RELEASE()  {	\
							GPIOB->CRL = (GPIOB->CRL & 0xFFFFFFF0) | 0x00000008; \
							GPIOB->BSRR = BSRR_SET(GPIOB_1WIRE);	\
							}

#define ONEWIRE_ISPULLDOWN() (!(GPIOB->IDR & GPIOB_1WIRE))

#define HC05_RESET_ON() GPIOB->BSRR = BSRR_RESET(GPIOB_BTRESET)
#define HC05_RESET_OFF() GPIOB->BSRR = BSRR_SET(GPIOB_BTRESET)
#define HC05_MODE_CONF() GPIOB->BSRR = BSRR_SET(GPIOB_BTMODE)
#define HC05_MODE_WORK() GPIOB->BSRR = BSRR_RESET(GPIOB_BTMODE)

#define IS_BUTTON_UP_PRESSED() (!(GPIOC->IDR & GPIOC_BUTTON_UP))
#define IS_BUTTON_MENU_PRESSED() (!(GPIOC->IDR & GPIOC_BUTTON_MENU))
#define IS_BUTTON_DOWN_PRESSED() (!(GPIOC->IDR & GPIOC_BUTTON_DOWN))

#define OUT1_ON() GPIOB->BSRR = BSRR_SET(GPIOB_OUT1)
#define OUT1_OFF() GPIOB->BSRR = BSRR_RESET(GPIOB_OUT1)
